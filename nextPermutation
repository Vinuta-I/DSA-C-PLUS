#include <bits/stdc++.h>
using namespace std;

vector<int> nextPermutation(vector<int> &permutation, int n)
{
    // Find the first element from the right which is smaller than its next element
    int i = n - 2;
    while (i >= 0 && permutation[i] >= permutation[i + 1]) {
        i--;
    }

    // If no such element is found, the given permutation is the last permutation
    if (i == -1) {
        reverse(permutation.begin(), permutation.end());
        return permutation;
    }

    // Find the smallest element from the right, which is greater than permutation[i]
    int j = n - 1;
    while (permutation[j] <= permutation[i]) {
        j--;
    }

    // Swap the elements at indices i and j
    swap(permutation[i], permutation[j]);

    // Reverse the suffix after index i
    reverse(permutation.begin() + i + 1, permutation.end());

    return permutation;
}
